dataset_metadata:
  title: Dataset metadata
  instruction: "Do you want to reuse the cached dataset and column names for '{data_source_name}' datasource? (Select 'No' to update the dataset and column names automatically)"

dataset_names:
  title: Select a dataset
  instruction: "Enter a dataset name to generate a new checks file: "

suggestion_filter:
  title: Select checks for basic data quality coverage
  instruction: "Select the checks to apply to '{dataset_name}': "
  na_message: Exiting the suggestion flow since no checks are selected, please run the soda-generator again to select checks
  answers:
    - schema_check: schema check
    - row_count: row count check
    - partition: time base partition
    - freshness_check: freshness check
    - validity_check: validity check
    - missing_value_check: missing value check
    - duplicate_value_check: duplicate value check

schema_check:
  title: Add a schema check
  instruction: "Apply a schema check to '{dataset_name}': "
  summary: validates in case of schema changes like column addition, deletion, data type change or index change
  doc_url: https://go.soda.io/suggest-schema
  answers:
    - Yes, fail when the schema changes
    - Yes, warn when the schema changes
    - "No"

row_count:
  title: Add a row count check
  instruction: "Confirm that '{dataset_name}' has more than 0 rows:"
  instruction_2: "Apply row count anomaly detection to '{dataset_name}':"
  summary: validates if the dataset has more than 0 rows
  doc_url: https://go.soda.io/suggest-rowcount

partition:
  title: Set a time partition
  instruction: "Choose the most relevant time partition column for '{dataset_name}' (Soda orders the columns by relevance)"
  instruction_2: "By default, Soda applies a partition for the preceding day. To expand the partition timeframe, enter a different number of days:"
  summary: applies a time partition to the dataset to scan only the most recent partition
  doc_url: https://go.soda.io/suggest-partition
  skip_message: "[Skip partitioning]"
  na_message: "[bold][#126ab3]{dataset_name}[/#126ab3][/bold] has no date, datetime or timestamp column. Skipping partitioning."

freshness_check:
  title: Add freshness check
  instruction: "Apply a freshness check for '{dataset_name}' (Soda orders the columns by relevance): "
  summary: validates if the dataset is updated within the specified timeframe
  doc_url: https://go.soda.io/suggest-fresh
  skip_message: "[Skip freshness check]"
  na_message: "[bold][#126ab3]{dataset_name}[/#126ab3][/bold] has no date, datetime or timestamp column. Skipping freshness check."

column_filter:
  title: Set column filtering
  instruction: Page {current_page}/{n_pages} - Filter columns
  column_filter_threshold: 20
  panel_info_message: "[bold][#126ab3]{dataset_name}[/][/bold] has {n_cols} columns. Filter candidate column names on which you will want to get suggestions for {check_names} that you donâ€™t have to go through a large list"
  output_info_message: "You chose to receive suggestions for {check_names} on the following columns:\n [#126ab3 bold]{filtered_columns}[/]"
  na_message: "You did not choose any columns in the previous step, this means that suggestions for {check_names} will be skipped. If this is not intended, we advise you to restart the flow and select at least 1 column."

missing_value_check:
  title: Add missing value checks
  instruction: "Apply missing value checks to the filtered columns in '{dataset_name}': "
  summary: validates if the dataset has missing values in the specified columns
  doc_url: https://go.soda.io/suggest-missing
  na_message: "Skipping missing value check since all columns are filtered out"

duplicate_value_check:
  title: Add duplicate value checks
  instruction: "Apply duplicate value checks to the following columns in '{dataset_name}': "
  summary: validates if the dataset has duplicate values in the specified columns
  doc_url: https://go.soda.io/suggest-duplicate
  na_message: "Skipping duplicate value check since all columns are filtered out"

validity_check:
  title: Add validity checks
  instruction: "Apply validity checks to the following columns in '{dataset_name}': "
  summary: validates if the dataset has invalid values in the specified column data types (e.g. an invalid email address or an invalid UUID)
  doc_url: https://go.soda.io/suggest-invalid
  answer_template: "'{column_name}' column has '{semantic_dtype}' semantic type"
  na_message: "[bold][#126ab3]{dataset_name}[/#126ab3][/bold] has no string columns with particular semantic types (e.g. email, credit card, timestamp, money etc.). Skipping validity check."

summary:
  title: Check suggestions complete
  instruction: "Soda generated a checks file at {sodacl_file_path}.\nYou can edit the file to add, remove, or modify the suggested checks."

instructions:
  title: Run a scan to test data quality
  instruction: "Run the following command to scan your data:\n\n{soda_scan_command}"
  na_message: "SodaCL file is not generated since no checks are selected, please run the soda-generator again to select checks"

sodacl_runner:
  title: Run a scan to test data quality
  instruction: "Run suggested sodacl file for {file_name}"
  na_message: "Exiting the suggestion flow since no checks are selected, please run the soda-generator again to select checks"
