from __future__ import annotations

import os
from datetime import datetime

from soda.generator.utils import get_console, parse_sodacl_jinja_template


class SodaCLGenerator:
    def __init__(self, sodacl_dir: str, dataset_name: str):
        self.sodacl_dir = sodacl_dir
        self.dataset_name = dataset_name
        self.file_name = self._create_file_name()
        self.file_path = os.path.join(self.sodacl_dir, self.file_name)
        self.file_content: str = ""
        self.console = get_console()

    def write_soda_cl_to_file(self) -> None:
        output_f_path = os.path.join(self.sodacl_dir, self.file_name)
        with open(output_f_path, "w") as f:
            f.write(self.file_content)

    def merge_file_contents(self, content: str, filter_sql: str | None) -> str:
        soda_cl_header = parse_sodacl_jinja_template(
            "sodacl_header.yaml",
            dataset_name=self.dataset_name,
            filter_sql=filter_sql,
        )
        return soda_cl_header + content

    def set_file_content(self, content: str) -> None:
        self.file_content = content

    def _create_file_name(self):
        current_time_str = datetime.now().strftime("%Y_%m_%d_%H_%M_%S")
        return f"sodacl_{self.dataset_name}_{current_time_str}.yaml"
