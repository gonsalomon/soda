import sys
import traceback
from typing import Optional


def get_exception_stacktrace(exception) -> Optional[str]:
    if isinstance(exception, BaseException):
        if sys.version_info < (3, 10):
            return "".join(
                traceback.format_exception(etype=type(exception), value=exception, tb=exception.__traceback__)
            )
        return "".join(traceback.format_exception(exception))
    return None


def ClickExceptionCatcher(cls, handler):
    class Cls(cls):
        def make_context(self, info_name, args, parent=None, **extra):
            try:
                return super().make_context(info_name, args, parent=parent, **extra)
            except Exception as exc:
                handler(self, info_name, exc)

        def invoke(self, ctx):
            try:
                return super().invoke(ctx)
            except Exception as exc:
                handler(self, ctx.info_name, exc)

    return Cls
