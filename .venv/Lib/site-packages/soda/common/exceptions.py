ERROR_CODE_GENERIC = "generic_error"
ERROR_CODE_CONNECTION_FAILED = "connection_failed"
SODA_SCIENTIFIC_MISSING_LOG_MESSAGE = (
    "The anomaly detection module could not be imported. "
    "This is often the case when the soda-scientific package was not installed. "
    "\n Please check https://docs.soda.io/soda-core/installation.html#install-soda-core-scientific "
    "for instructions."
)

# Known exit codes, see https://docs.soda.io/soda-library/programmatic.html#scan-exit-codes
EXIT_CODE_RESULTS_SUCCESS = 0
EXIT_CODE_RESULTS_WARNINGS = 1
EXIT_CODE_RESULTS_FAILURES = 2
EXIT_CODE_RESULTS_ERRORS = 3
EXIT_CODE_NO_RESULTS_EXCEPTION = 4


class SodaSqlError(Exception):
    def __init__(self, msg, original_exception):
        super().__init__(f"{msg}: {str(original_exception)}")
        self.error_code = ERROR_CODE_GENERIC
        self.original_exception = original_exception


class DataSourceError(Exception):
    def __init__(self, msg):
        super().__init__(msg)
        self.error_code = ERROR_CODE_CONNECTION_FAILED


class CheckConfigError(Exception):
    def __init__(self, msg):
        super().__init__(msg)
        self.error_code = ERROR_CODE_GENERIC


class DataSourceConnectionError(SodaSqlError):
    def __init__(self, data_source_type, original_exception):
        super().__init__(
            f"Encountered a problem while trying to connect to {data_source_type}",
            original_exception,
        )
        self.error_code = ERROR_CODE_CONNECTION_FAILED
        self.data_source_type = data_source_type
