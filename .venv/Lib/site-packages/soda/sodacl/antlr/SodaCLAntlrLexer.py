# Generated from /Users/m1n0/dev/soda/soda-sql/soda-library/src/soda/soda/sodacl/antlr/SodaCLAntlr.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,64,556,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
        1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
        17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
        20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,
        27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,
        30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
        32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,
        35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,
        41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,1,
        47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,
        52,1,53,1,53,1,53,1,53,4,53,496,8,53,11,53,12,53,497,1,53,1,53,1,
        54,1,54,1,54,1,54,4,54,506,8,54,11,54,12,54,507,1,54,1,54,1,55,1,
        55,5,55,514,8,55,10,55,12,55,517,9,55,1,56,1,56,1,56,1,56,1,56,1,
        56,1,56,1,56,4,56,527,8,56,11,56,12,56,528,1,56,1,56,1,57,4,57,534,
        8,57,11,57,12,57,535,1,58,4,58,539,8,58,11,58,12,58,540,1,59,1,59,
        1,59,1,59,3,59,547,8,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,
        0,0,64,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
        47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,
        69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
        91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
        111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,1,
        0,7,1,0,34,34,1,0,96,96,4,0,36,36,65,90,95,95,97,122,6,0,32,32,40,
        41,44,44,60,62,91,91,93,93,1,0,91,91,1,0,97,122,1,0,48,57,568,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
        0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
        0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
        0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
        0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
        0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,
        129,1,0,0,0,3,139,1,0,0,0,5,146,1,0,0,0,7,162,1,0,0,0,9,167,1,0,
        0,0,11,179,1,0,0,0,13,188,1,0,0,0,15,206,1,0,0,0,17,214,1,0,0,0,
        19,233,1,0,0,0,21,241,1,0,0,0,23,260,1,0,0,0,25,265,1,0,0,0,27,275,
        1,0,0,0,29,280,1,0,0,0,31,289,1,0,0,0,33,300,1,0,0,0,35,307,1,0,
        0,0,37,326,1,0,0,0,39,343,1,0,0,0,41,358,1,0,0,0,43,374,1,0,0,0,
        45,389,1,0,0,0,47,391,1,0,0,0,49,395,1,0,0,0,51,399,1,0,0,0,53,407,
        1,0,0,0,55,411,1,0,0,0,57,414,1,0,0,0,59,419,1,0,0,0,61,424,1,0,
        0,0,63,429,1,0,0,0,65,436,1,0,0,0,67,441,1,0,0,0,69,445,1,0,0,0,
        71,449,1,0,0,0,73,453,1,0,0,0,75,455,1,0,0,0,77,457,1,0,0,0,79,459,
        1,0,0,0,81,461,1,0,0,0,83,463,1,0,0,0,85,465,1,0,0,0,87,467,1,0,
        0,0,89,469,1,0,0,0,91,471,1,0,0,0,93,473,1,0,0,0,95,476,1,0,0,0,
        97,479,1,0,0,0,99,482,1,0,0,0,101,485,1,0,0,0,103,487,1,0,0,0,105,
        489,1,0,0,0,107,491,1,0,0,0,109,501,1,0,0,0,111,511,1,0,0,0,113,
        518,1,0,0,0,115,533,1,0,0,0,117,538,1,0,0,0,119,542,1,0,0,0,121,
        548,1,0,0,0,123,550,1,0,0,0,125,552,1,0,0,0,127,554,1,0,0,0,129,
        130,5,114,0,0,130,131,5,111,0,0,131,132,5,119,0,0,132,133,5,115,
        0,0,133,134,5,32,0,0,134,135,5,100,0,0,135,136,5,105,0,0,136,137,
        5,102,0,0,137,138,5,102,0,0,138,2,1,0,0,0,139,140,5,115,0,0,140,
        141,5,99,0,0,141,142,5,104,0,0,142,143,5,101,0,0,143,144,5,109,0,
        0,144,145,5,97,0,0,145,4,1,0,0,0,146,147,5,102,0,0,147,148,5,114,
        0,0,148,149,5,101,0,0,149,150,5,115,0,0,150,151,5,104,0,0,151,152,
        5,110,0,0,152,153,5,101,0,0,153,154,5,115,0,0,154,155,5,115,0,0,
        155,156,5,32,0,0,156,157,5,117,0,0,157,158,5,115,0,0,158,159,5,105,
        0,0,159,160,5,110,0,0,160,161,5,103,0,0,161,6,1,0,0,0,162,163,5,
        119,0,0,163,164,5,105,0,0,164,165,5,116,0,0,165,166,5,104,0,0,166,
        8,1,0,0,0,167,168,5,102,0,0,168,169,5,97,0,0,169,170,5,105,0,0,170,
        171,5,108,0,0,171,172,5,101,0,0,172,173,5,100,0,0,173,174,5,32,0,
        0,174,175,5,114,0,0,175,176,5,111,0,0,176,177,5,119,0,0,177,178,
        5,115,0,0,178,10,1,0,0,0,179,180,5,103,0,0,180,181,5,114,0,0,181,
        182,5,111,0,0,182,183,5,117,0,0,183,184,5,112,0,0,184,185,5,32,0,
        0,185,186,5,98,0,0,186,187,5,121,0,0,187,12,1,0,0,0,188,189,5,114,
        0,0,189,190,5,111,0,0,190,191,5,119,0,0,191,192,5,95,0,0,192,193,
        5,99,0,0,193,194,5,111,0,0,194,195,5,117,0,0,195,196,5,110,0,0,196,
        197,5,116,0,0,197,198,5,32,0,0,198,199,5,115,0,0,199,200,5,97,0,
        0,200,201,5,109,0,0,201,202,5,101,0,0,202,203,5,32,0,0,203,204,5,
        97,0,0,204,205,5,115,0,0,205,14,1,0,0,0,206,207,5,100,0,0,207,208,
        5,101,0,0,208,209,5,102,0,0,209,210,5,97,0,0,210,211,5,117,0,0,211,
        212,5,108,0,0,212,213,5,116,0,0,213,16,1,0,0,0,214,215,5,115,0,0,
        215,216,5,97,0,0,216,217,5,109,0,0,217,218,5,101,0,0,218,219,5,32,
        0,0,219,220,5,100,0,0,220,221,5,97,0,0,221,222,5,121,0,0,222,223,
        5,32,0,0,223,224,5,108,0,0,224,225,5,97,0,0,225,226,5,115,0,0,226,
        227,5,116,0,0,227,228,5,32,0,0,228,229,5,119,0,0,229,230,5,101,0,
        0,230,231,5,101,0,0,231,232,5,107,0,0,232,18,1,0,0,0,233,234,5,112,
        0,0,234,235,5,101,0,0,235,236,5,114,0,0,236,237,5,99,0,0,237,238,
        5,101,0,0,238,239,5,110,0,0,239,240,5,116,0,0,240,20,1,0,0,0,241,
        242,5,97,0,0,242,243,5,110,0,0,243,244,5,111,0,0,244,245,5,109,0,
        0,245,246,5,97,0,0,246,247,5,108,0,0,247,248,5,121,0,0,248,249,5,
        32,0,0,249,250,5,115,0,0,250,251,5,99,0,0,251,252,5,111,0,0,252,
        253,5,114,0,0,253,254,5,101,0,0,254,255,5,32,0,0,255,256,5,102,0,
        0,256,257,5,111,0,0,257,258,5,114,0,0,258,259,5,32,0,0,259,22,1,
        0,0,0,260,261,5,100,0,0,261,262,5,105,0,0,262,263,5,102,0,0,263,
        264,5,102,0,0,264,24,1,0,0,0,265,266,5,118,0,0,266,267,5,97,0,0,
        267,268,5,108,0,0,268,269,5,117,0,0,269,270,5,101,0,0,270,271,5,
        115,0,0,271,272,5,32,0,0,272,273,5,105,0,0,273,274,5,110,0,0,274,
        26,1,0,0,0,275,276,5,109,0,0,276,277,5,117,0,0,277,278,5,115,0,0,
        278,279,5,116,0,0,279,28,1,0,0,0,280,281,5,101,0,0,281,282,5,120,
        0,0,282,283,5,105,0,0,283,284,5,115,0,0,284,285,5,116,0,0,285,286,
        5,32,0,0,286,287,5,105,0,0,287,288,5,110,0,0,288,30,1,0,0,0,289,
        290,5,99,0,0,290,291,5,104,0,0,291,292,5,101,0,0,292,293,5,99,0,
        0,293,294,5,107,0,0,294,295,5,115,0,0,295,296,5,32,0,0,296,297,5,
        102,0,0,297,298,5,111,0,0,298,299,5,114,0,0,299,32,1,0,0,0,300,301,
        5,102,0,0,301,302,5,105,0,0,302,303,5,108,0,0,303,304,5,116,0,0,
        304,305,5,101,0,0,305,306,5,114,0,0,306,34,1,0,0,0,307,308,5,99,
        0,0,308,309,5,111,0,0,309,310,5,110,0,0,310,311,5,102,0,0,311,312,
        5,105,0,0,312,313,5,103,0,0,313,314,5,117,0,0,314,315,5,114,0,0,
        315,316,5,97,0,0,316,317,5,116,0,0,317,318,5,105,0,0,318,319,5,111,
        0,0,319,320,5,110,0,0,320,321,5,115,0,0,321,322,5,32,0,0,322,323,
        5,102,0,0,323,324,5,111,0,0,324,325,5,114,0,0,325,36,1,0,0,0,326,
        327,5,102,0,0,327,328,5,111,0,0,328,329,5,114,0,0,329,330,5,32,0,
        0,330,331,5,101,0,0,331,332,5,97,0,0,332,333,5,99,0,0,333,334,5,
        104,0,0,334,335,5,32,0,0,335,336,5,100,0,0,336,337,5,97,0,0,337,
        338,5,116,0,0,338,339,5,97,0,0,339,340,5,115,0,0,340,341,5,101,0,
        0,341,342,5,116,0,0,342,38,1,0,0,0,343,344,5,102,0,0,344,345,5,111,
        0,0,345,346,5,114,0,0,346,347,5,32,0,0,347,348,5,101,0,0,348,349,
        5,97,0,0,349,350,5,99,0,0,350,351,5,104,0,0,351,352,5,32,0,0,352,
        353,5,116,0,0,353,354,5,97,0,0,354,355,5,98,0,0,355,356,5,108,0,
        0,356,357,5,101,0,0,357,40,1,0,0,0,358,359,5,102,0,0,359,360,5,111,
        0,0,360,361,5,114,0,0,361,362,5,32,0,0,362,363,5,101,0,0,363,364,
        5,97,0,0,364,365,5,99,0,0,365,366,5,104,0,0,366,367,5,32,0,0,367,
        368,5,99,0,0,368,369,5,111,0,0,369,370,5,108,0,0,370,371,5,117,0,
        0,371,372,5,109,0,0,372,373,5,110,0,0,373,42,1,0,0,0,374,375,5,114,
        0,0,375,376,5,101,0,0,376,377,5,99,0,0,377,378,5,111,0,0,378,379,
        5,110,0,0,379,380,5,99,0,0,380,381,5,105,0,0,381,382,5,108,0,0,382,
        383,5,105,0,0,383,384,5,97,0,0,384,385,5,116,0,0,385,386,5,105,0,
        0,386,387,5,111,0,0,387,388,5,110,0,0,388,44,1,0,0,0,389,390,5,46,
        0,0,390,46,1,0,0,0,391,392,5,102,0,0,392,393,5,111,0,0,393,394,5,
        114,0,0,394,48,1,0,0,0,395,396,5,97,0,0,396,397,5,110,0,0,397,398,
        5,100,0,0,398,50,1,0,0,0,399,400,5,98,0,0,400,401,5,101,0,0,401,
        402,5,116,0,0,402,403,5,119,0,0,403,404,5,101,0,0,404,405,5,101,
        0,0,405,406,5,110,0,0,406,52,1,0,0,0,407,408,5,110,0,0,408,409,5,
        111,0,0,409,410,5,116,0,0,410,54,1,0,0,0,411,412,5,105,0,0,412,413,
        5,110,0,0,413,56,1,0,0,0,414,415,5,119,0,0,415,416,5,97,0,0,416,
        417,5,114,0,0,417,418,5,110,0,0,418,58,1,0,0,0,419,420,5,102,0,0,
        420,421,5,97,0,0,421,422,5,105,0,0,422,423,5,108,0,0,423,60,1,0,
        0,0,424,425,5,112,0,0,425,426,5,97,0,0,426,427,5,115,0,0,427,428,
        5,115,0,0,428,62,1,0,0,0,429,430,5,99,0,0,430,431,5,104,0,0,431,
        432,5,97,0,0,432,433,5,110,0,0,433,434,5,103,0,0,434,435,5,101,0,
        0,435,64,1,0,0,0,436,437,5,108,0,0,437,438,5,97,0,0,438,439,5,115,
        0,0,439,440,5,116,0,0,440,66,1,0,0,0,441,442,5,97,0,0,442,443,5,
        118,0,0,443,444,5,103,0,0,444,68,1,0,0,0,445,446,5,109,0,0,446,447,
        5,105,0,0,447,448,5,110,0,0,448,70,1,0,0,0,449,450,5,109,0,0,450,
        451,5,97,0,0,451,452,5,120,0,0,452,72,1,0,0,0,453,454,5,91,0,0,454,
        74,1,0,0,0,455,456,5,93,0,0,456,76,1,0,0,0,457,458,5,123,0,0,458,
        78,1,0,0,0,459,460,5,125,0,0,460,80,1,0,0,0,461,462,5,40,0,0,462,
        82,1,0,0,0,463,464,5,41,0,0,464,84,1,0,0,0,465,466,5,44,0,0,466,
        86,1,0,0,0,467,468,5,37,0,0,468,88,1,0,0,0,469,470,5,43,0,0,470,
        90,1,0,0,0,471,472,5,45,0,0,472,92,1,0,0,0,473,474,5,33,0,0,474,
        475,5,61,0,0,475,94,1,0,0,0,476,477,5,60,0,0,477,478,5,62,0,0,478,
        96,1,0,0,0,479,480,5,60,0,0,480,481,5,61,0,0,481,98,1,0,0,0,482,
        483,5,62,0,0,483,484,5,61,0,0,484,100,1,0,0,0,485,486,5,61,0,0,486,
        102,1,0,0,0,487,488,5,60,0,0,488,104,1,0,0,0,489,490,5,62,0,0,490,
        106,1,0,0,0,491,495,5,34,0,0,492,496,8,0,0,0,493,494,5,92,0,0,494,
        496,5,34,0,0,495,492,1,0,0,0,495,493,1,0,0,0,496,497,1,0,0,0,497,
        495,1,0,0,0,497,498,1,0,0,0,498,499,1,0,0,0,499,500,5,34,0,0,500,
        108,1,0,0,0,501,505,5,96,0,0,502,506,8,1,0,0,503,504,5,92,0,0,504,
        506,5,96,0,0,505,502,1,0,0,0,505,503,1,0,0,0,506,507,1,0,0,0,507,
        505,1,0,0,0,507,508,1,0,0,0,508,509,1,0,0,0,509,510,5,96,0,0,510,
        110,1,0,0,0,511,515,7,2,0,0,512,514,8,3,0,0,513,512,1,0,0,0,514,
        517,1,0,0,0,515,513,1,0,0,0,515,516,1,0,0,0,516,112,1,0,0,0,517,
        515,1,0,0,0,518,519,5,91,0,0,519,526,7,2,0,0,520,527,8,4,0,0,521,
        522,5,92,0,0,522,527,5,91,0,0,523,527,5,93,0,0,524,525,5,92,0,0,
        525,527,5,93,0,0,526,520,1,0,0,0,526,521,1,0,0,0,526,523,1,0,0,0,
        526,524,1,0,0,0,527,528,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,
        529,530,1,0,0,0,530,531,5,93,0,0,531,114,1,0,0,0,532,534,7,5,0,0,
        533,532,1,0,0,0,534,535,1,0,0,0,535,533,1,0,0,0,535,536,1,0,0,0,
        536,116,1,0,0,0,537,539,7,6,0,0,538,537,1,0,0,0,539,540,1,0,0,0,
        540,538,1,0,0,0,540,541,1,0,0,0,541,118,1,0,0,0,542,546,3,117,58,
        0,543,547,3,121,60,0,544,547,3,123,61,0,545,547,3,125,62,0,546,543,
        1,0,0,0,546,544,1,0,0,0,546,545,1,0,0,0,547,120,1,0,0,0,548,549,
        5,100,0,0,549,122,1,0,0,0,550,551,5,104,0,0,551,124,1,0,0,0,552,
        553,5,109,0,0,553,126,1,0,0,0,554,555,5,32,0,0,555,128,1,0,0,0,11,
        0,495,497,505,507,515,526,528,535,540,546,0
    ]

class SodaCLAntlrLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    FOR = 24
    AND = 25
    BETWEEN = 26
    NOT = 27
    IN = 28
    WARN = 29
    FAIL = 30
    PASS = 31
    CHANGE = 32
    LAST = 33
    AVG = 34
    MIN = 35
    MAX = 36
    SQUARE_LEFT = 37
    SQUARE_RIGHT = 38
    CURLY_LEFT = 39
    CURLY_RIGHT = 40
    ROUND_LEFT = 41
    ROUND_RIGHT = 42
    COMMA = 43
    PERCENT = 44
    PLUS = 45
    MINUS = 46
    NOT_EQUAL = 47
    NOT_EQUAL_SQL = 48
    LTE = 49
    GTE = 50
    EQUAL = 51
    LT = 52
    GT = 53
    IDENTIFIER_DOUBLE_QUOTE = 54
    IDENTIFIER_BACKTICK = 55
    IDENTIFIER_UNQUOTED = 56
    IDENTIFIER_SQUARE_BRACKETS = 57
    STRING = 58
    DIGITS = 59
    TIMEUNIT = 60
    DAY = 61
    HOUR = 62
    MINUTE = 63
    S = 64

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'rows diff'", "'schema'", "'freshness using'", "'with'", "'failed rows'", 
            "'group by'", "'row_count same as'", "'default'", "'same day last week'", 
            "'percent'", "'anomaly score for '", "'diff'", "'values in'", 
            "'must'", "'exist in'", "'checks for'", "'filter'", "'configurations for'", 
            "'for each dataset'", "'for each table'", "'for each column'", 
            "'reconciliation'", "'.'", "'for'", "'and'", "'between'", "'not'", 
            "'in'", "'warn'", "'fail'", "'pass'", "'change'", "'last'", 
            "'avg'", "'min'", "'max'", "'['", "']'", "'{'", "'}'", "'('", 
            "')'", "','", "'%'", "'+'", "'-'", "'!='", "'<>'", "'<='", "'>='", 
            "'='", "'<'", "'>'", "'d'", "'h'", "'m'", "' '" ]

    symbolicNames = [ "<INVALID>",
            "FOR", "AND", "BETWEEN", "NOT", "IN", "WARN", "FAIL", "PASS", 
            "CHANGE", "LAST", "AVG", "MIN", "MAX", "SQUARE_LEFT", "SQUARE_RIGHT", 
            "CURLY_LEFT", "CURLY_RIGHT", "ROUND_LEFT", "ROUND_RIGHT", "COMMA", 
            "PERCENT", "PLUS", "MINUS", "NOT_EQUAL", "NOT_EQUAL_SQL", "LTE", 
            "GTE", "EQUAL", "LT", "GT", "IDENTIFIER_DOUBLE_QUOTE", "IDENTIFIER_BACKTICK", 
            "IDENTIFIER_UNQUOTED", "IDENTIFIER_SQUARE_BRACKETS", "STRING", 
            "DIGITS", "TIMEUNIT", "DAY", "HOUR", "MINUTE", "S" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "FOR", "AND", "BETWEEN", "NOT", 
                  "IN", "WARN", "FAIL", "PASS", "CHANGE", "LAST", "AVG", 
                  "MIN", "MAX", "SQUARE_LEFT", "SQUARE_RIGHT", "CURLY_LEFT", 
                  "CURLY_RIGHT", "ROUND_LEFT", "ROUND_RIGHT", "COMMA", "PERCENT", 
                  "PLUS", "MINUS", "NOT_EQUAL", "NOT_EQUAL_SQL", "LTE", 
                  "GTE", "EQUAL", "LT", "GT", "IDENTIFIER_DOUBLE_QUOTE", 
                  "IDENTIFIER_BACKTICK", "IDENTIFIER_UNQUOTED", "IDENTIFIER_SQUARE_BRACKETS", 
                  "STRING", "DIGITS", "TIMEUNIT", "DAY", "HOUR", "MINUTE", 
                  "S" ]

    grammarFileName = "SodaCLAntlr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


