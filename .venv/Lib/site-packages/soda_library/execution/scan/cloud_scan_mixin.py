from soda_library.__version__ import SODA_LIBRARY_VERSION

from soda.__version__ import SODA_CORE_VERSION


class CloudScanMixin:
    def scan_start(self):
        self._logs.info(
            "By downloading and using Soda Library, you agree to Soda's Terms & Conditions (https://go.soda.io/t&c) and Privacy Policy (https://go.soda.io/privacy). "
        )

    def log_version(self):
        self._logs.info(f"Soda Library {SODA_LIBRARY_VERSION}")
        self._logs.info(f"Soda Core {SODA_CORE_VERSION}")

    def validate_prerequisites(self) -> bool:
        # Validate if Soda Cloud is present.
        if not self._configuration.soda_cloud:
            self._logs.error(
                "You have not configured Soda Library to work with Soda Cloud. Add Soda Cloud API keys (https://go.soda.io/configure) to run a scan."
            )
            return False

        # Validate if Soda Cloud credentials are valid.
        login_status = True
        login_response_code, login_response = self._configuration.soda_cloud.login()
        if login_response_code == 401:
            self._logs.error(
                "Your Soda Cloud API keys have expired or are invalid. Update your API key configuration (https://go.soda.io/configure), then run the scan again."
            )
            login_status = False
        elif login_response_code == 403:
            self._logs.error(
                "You no longer have access to this organization from your Soda Cloud account. Contact your Soda Admin or support@soda.io."
            )
            login_status = False
        elif login_response_code != 200:
            raise AssertionError("Your Soda Cloud API keys are invalid. Contact your Soda Admin or support@soda.io.")
        else:
            # This is an unwanted side-effect but there is no single point of entry to Soda Cloud where it would be better/safer to set the org id.
            self._configuration.soda_cloud.org_id = login_response["organisationId"]

            org_info = None
            for org in login_response["organisations"]:
                if org["id"] == login_response["organisationId"]:
                    org_info = org
                    break

            self._configuration.soda_cloud.organization_info = org_info
            self._configuration.soda_cloud.user = login_response["user"] if "user" in login_response else None

        return login_status
